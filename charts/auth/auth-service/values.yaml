# Default values for auth-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: harbor.warering.online/shop-microservices/shop-microservice
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.

  tag: "latest"

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets:
- name: regcred
# This is to override the chart name.
nameOverride: auth-service
fullnameOverride: auth-service

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {} # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

gatewayclass:
  enabled: true
  gatewayclassName: auth-gatewayclass
  controllerName: traefik.io/gateway-controller

gateway:
  enabled: true
  nameGateway: auth-gateway
  spec: 
    gatewayClassName: traefik
  listeners:
    - name: http
      protocol: HTTP
      port: 80
      allowedRoutes:
        namespaces:
          from: All 
    # - name: https
    #   protocol: HTTPS
    #   port: 443
    #   tls:
    #     mode: Terminate
    #     certificateRefs:
    #       - name: secret-tls
    #   allowedRoutes:
    #     namespaces:
    #       from: All 

httpRoute:
  enabled: true
  nameRoute: auth-httproute
  parentRefs:
    - name:
      sectionName: http
      kind: Gateway
  hostnames:
    - whoami.localhost
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name:
          port: 80


# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /auth_v1
    port: 3000
  initialDelaySeconds: 3
  periodSeconds: 5
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3
readinessProbe:
  httpGet:
    path: /auth_v1
    port: 3000
  initialDelaySeconds: 3
  periodSeconds: 5
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3
#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
volumes:
- name: env-volume
  secret:
    secretName: auth-env
    optional: false
    items:
    - key: ".env"
      path: ".env"

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
- name: env-volume
  mountPath: "/etc/env/.env"
  subPath: ".env"
  readOnly: true

sslSecret:
  enabled: true
  nameSecret: secret-tls
  tls_crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURrVENDQXhlZ0F3SUJBZ0lTQXo2a1pjcFp5VlhRWnRFTXZjTmNYdm80TUFvR0NDcUdTTTQ5QkFNRE1ESXgKQ3pBSkJnTlZCQVlUQWxWVE1SWXdG
    QVlEVlFRS0V3MU1aWFFuY3lCRmJtTnllWEIwTVFzd0NRWURWUVFERXdKRgpOakFlRncweU5UQXpN
    VEF3T1RBNU1qVmFGdzB5TlRBMk1EZ3dPVEE1TWpSYU1Cb3hHREFXQmdOVkJBTVREM2RoCmNtVnlh
    VzVuTG05dWJHbHVaVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCRGJzTXprNnIx
    OTIKempJWUhYTEhFcG5hVFZ4RDRwZmFCNnd6OHNnbi9NM1lYRjBjRktJS2JUMSt2MTBUM3NxT1Vj
    c3ZVR0tBR2ZRTwp6TEh2UFJaRnV2eWpnZ0lqTUlJQ0h6QU9CZ05WSFE4QkFmOEVCQU1DQjRBd0hR
    WURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01B
    QXdIUVlEVlIwT0JCWUVGT0hsekdFY2hvSHEKU2Q1RzU2YldmQUZTL3JBUk1COEdBMVVkSXdRWU1C
    YUFGSk1uUnBnRHFWRm9qcGpXeEVKSTJ5Ty9XSlRTTUZVRwpDQ3NHQVFVRkJ3RUJCRWt3UnpBaEJn
    Z3JCZ0VGQlFjd0FZWVZhSFIwY0RvdkwyVTJMbTh1YkdWdVkzSXViM0puCk1DSUdDQ3NHQVFVRkJ6
    QUNoaFpvZEhSd09pOHZaVFl1YVM1c1pXNWpjaTV2Y21jdk1DMEdBMVVkRVFRbU1DU0MKRVNvdWQy
    RnlaWEpwYm1jdWIyNXNhVzVsZ2c5M1lYSmxjbWx1Wnk1dmJteHBibVV3RXdZRFZSMGdCQXd3Q2pB
    SQpCZ1puZ1F3QkFnRXdnZ0VEQmdvckJnRUVBZFo1QWdRQ0JJSDBCSUh4QU84QWRRQjlXUjRTNFhn
    cWV4eGhaM3hlCi9malFoMXdVb0U2Vm5ya0RMOWtPakM1NXVBQUFBWlYvaG45ZkFBQUVBd0JHTUVR
    Q0lGWGV4dmp0Q0pENnlFdnEKZ09HYmloR1FzOWNxRVFFREo0aC9HTzVkY2NvTUFpQTI5TXNXNkpR
    eWdoQXJHTVppaTFnSXVBbkZ4SXJQWWNYLwp1aGZtV0F0TmhnQjJBS0xqQ3VSRjc3MnRtMzQ0N1Vk
    bmQxUFhnbHVFbE5jclhoc3N4TGxRcEVmbkFBQUJsWCtHCmYyZ0FBQVFEQUVjd1JRSWhBUERKeWw4
    NndpMWRlZGpsQmNKTDB1Z3RIV2tXNnRzYlViZmNnYWdqc3VMUEFpQnYKSzgxVHltYTJsWjJuWi9B
    eHJkUklDWmh0STJzcXFWNmxnaHZQOGZKdS9UQUtCZ2dxaGtqT1BRUURBd05vQURCbApBakVBdFJp
    alcxaXRkYWFXL1NzTjlUSlVpN1F4aEUwN2N2QjMwaXhPbndWcGVBY0hFV1FGZHJmV1ZERFJPa3JV
    CmM5WUpBakFUZXdWOXphM1VnTFhERE1CeEFkVit2R2RxbG9vSkoySjh2ckxwNFh2TTdtaDZIR1Zx
    c3hsR0JhaXkKUUw1RHpUUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENF
    UlRJRklDQVRFLS0tLS0KTUlJRVZ6Q0NBaitnQXdJQkFnSVJBTEJYUHBGemx5ZHcyN1NIeXpwRkt6
    Z3dEUVlKS29aSWh2Y05BUUVMQlFBdwpUekVMTUFrR0ExVUVCaE1DVlZNeEtUQW5CZ05WQkFvVElF
    bHVkR1Z5Ym1WMElGTmxZM1Z5YVhSNUlGSmxjMlZoCmNtTm9JRWR5YjNWd01SVXdFd1lEVlFRREV3
    eEpVMUpISUZKdmIzUWdXREV3SGhjTk1qUXdNekV6TURBd01EQXcKV2hjTk1qY3dNekV5TWpNMU9U
    VTVXakF5TVFzd0NRWURWUVFHRXdKVlV6RVdNQlFHQTFVRUNoTU5UR1YwSjNNZwpSVzVqY25sd2RE
    RUxNQWtHQTFVRUF4TUNSVFl3ZGpBUUJnY3Foa2pPUFFJQkJnVXJnUVFBSWdOaUFBVFo4WjVHCmgv
    Z2hjV0NvSnV1aitybnEyaDI1RXFmVUp0bFJGTEZoZkhXV3Z5SUxPUi9WdnRFS1Jxb3RQRW9KaEM2
    K1FKVlYKNlJsQU4yWjE3VEpPZHdSSitIQjd3eGpuenZkeEVQNnNkTmdBMU8xdEhITVdNeENjT3JM
    cWJHTDB2YmlqZ2ZndwpnZlV3RGdZRFZSMFBBUUgvQkFRREFnR0dNQjBHQTFVZEpRUVdNQlFHQ0Nz
    R0FRVUZCd01DQmdnckJnRUZCUWNECkFUQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHQTFV
    ZERnUVdCQlNUSjBhWUE2bFJhSTZZMXNSQ1NOc2oKdjFpVTBqQWZCZ05WSFNNRUdEQVdnQlI1dEZu
    bWU3Ymw1QUZ6Z0FpSXlCcFk5dW1iYmpBeUJnZ3JCZ0VGQlFjQgpBUVFtTUNRd0lnWUlLd1lCQlFV
    SE1BS0dGbWgwZEhBNkx5OTRNUzVwTG14bGJtTnlMbTl5Wnk4d0V3WURWUjBnCkJBd3dDakFJQmda
    bmdRd0JBZ0V3SndZRFZSMGZCQ0F3SGpBY29CcWdHSVlXYUhSMGNEb3ZMM2d4TG1NdWJHVnUKWTNJ
    dWIzSm5MekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBZll0N1NpQTFzZ1dHQ0lwdW5rNDZyNEFF
    eElSYwpNeGtLZ1VoTmxycnYxQjIxaE9hWE4vNW1pRStMT1RicmNtVS9NOXl2QzZNVlk3MzBHTkZv
    TDhJaEo4ajh2ck9MCnBNWTIyT1A2YmFTMWs5WU1ydERUbHdKSG9HYnkwNFRoVFVlQkRrc1M5Uml1
    SHZpY1pxQmVkUWRJRjY1cFp1aHAKZURjR0JjTGlZYXNRci9FTzVneHh0THlUbWdzSFNPVlNCY0ZP
    bjlsZ3Y3TEVDUHE5aTdtZkgzbXB4Z3JSS1N4SApwT29aMEtYTWNCK2hIdXZsa2xIbnR2Y0kwbU1N
    UTBtaFlqNnF0TUZTdGtGMVJwQ0czSVBkSXdwVkNRcXU4R1Y3CnM4dWJrblJ6cyszQy9CbTE5UkZP
    b2lQcERrd3Z5TmZ2bVExNFhreXFxS0s1b1o4emhEMzJrRlJRa3hhOHVaU3UKaDRhVEltRnhrbnUz
    OXdhQnhJUlhFNGpLeGxBbVFjNFFqRlpvcTFLbVFxUWcwSi8xSkY4UmxGdkphczFWY2pMdgpZbHZV
    QjJ0Nm5wTzZvUWpCM2wrUE5mMERwUUg3aVV4M1d6NUFqUUNpNkwyNUZqeUUwNnE2QlovUWxtdFlk
    bC84ClpZYW80U1JxUEVzLzZjQWlGK1FmNXpnMlVrYVd0RHBobDFMS011VE5Mb3R2c1g5OUhQNjlW
    MmZhTnllZ29kUTAKTHlUQXByL3ZUMDFZUEU0NnZOc0RMZ0srNGNMNlRyekMvYTRXY21GNVNSSjkz
    OHpydi9kdUpITFhRSWt1NXYwKwpFd095NTlIZG0wUFQvRXIvODRkRFYwQ1NqZFIvMlh1Wk0za3B5
    c1NLTGdEMWNLaURBK0lSZ3VPREN4Zk85Y3lZCklnNDZ2OW1GbUJ2eUgwND0KLS0tLS1FTkQgQ0VS
    VElGSUNBVEUtLS0tLQoK

  tls_key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdT
    TTQ5QXdFSEJHMHdhd0lCQVFRZ21MU3pJQU9RYmhJN09meFEKeEk1Z0dINlBIbDNmdDFNOGxxYXoy
    RldiakFhaFJBTkNBQVEyN0RNNU9xOWZkczR5R0IxeXh4S1oyazFjUStLWAoyZ2VzTS9MSUovek4y
    RnhkSEJTaUNtMDlmcjlkRTk3S2psSExMMUJpZ0JuMERzeXg3ejBXUmJyOAotLS0tLUVORCBQUklW
    QVRFIEtFWS0tLS0tCgo=


nodeSelector: {}

tolerations: []

affinity: {}
